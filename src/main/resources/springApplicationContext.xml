<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">


    <context:component-scan base-package="my.crm"/>
    <mvc:annotation-driven/>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <jee:jndi-lookup jndi-name="jdbc/crm_database"
                     id="appDataSource"
                     expected-type="javax.sql.DataSource"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="appDataSource"/>
        <property name="packagesToScan" value="my.crm.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <bean id="appTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="appTransactionManager"/>


    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service id="jdbcUserService" data-source-ref="appDataSource"
                                        users-by-username-query="SELECT username, password, TRUE FROM user WHERE username=?"
                                        authorities-by-username-query="SELECT username, role FROM user
                                         JOIN user_authority
                                         ON user.id=user_authority.user_id
                                         JOIN authority
                                         ON authority.id=user_authority.authority_id
                                         WHERE username=?"/>
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http auto-config="true" use-expressions="true">
        <!-- error page not working?-->
        <security:access-denied-handler error-page="/error"/>

        <security:intercept-url pattern="/" access="permitAll"/>
        <security:intercept-url pattern="/registration" access="permitAll"/>
        <security:intercept-url pattern="/companies" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/dealings" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/persons" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/persons" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/tasks" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/add-company" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/add-contact" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/add-deal" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/add-task" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/test-admin" access="hasRole('ROLE_ADMIN')"/>
        <security:form-login login-page="/login"/>
        <!--remember-me-cookie= - название куки (чтобы к примеру обратится к ним прмощью джава скрипта)-->
        <security:remember-me remember-me-parameter="rememberJava" remember-me-cookie="crm" user-service-ref="jdbcUserService" token-repository-ref="token" token-validity-seconds="86400"/>
        <security:csrf disabled="true"/>
    </security:http>

    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>
    <bean id="token" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="dataSource" ref="appDataSource"/>
    </bean>
</beans>